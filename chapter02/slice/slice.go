package main

import "fmt"

// 一个slice由三个部分构成：指针、长度和容量。
//指针指向第一个slice元素对应的底层数组元素的地址，
//要注意的是slice的第一个元素并不一定就是数组的第一个元素。
//长度对应slice中元素的数目；长度不能超过容量，容量一般是从slice的开始位置到底层数据的结尾位置。
//内置的len和cap函数分别返回slice的长度和容量。

/*
slice的切片操作s[i:j]，其中0 ≤ i≤ j≤ cap(s)，用于创建一个新的slice，引用s的从第i个元素开始到第j-1个元素的子序列。
新的slice将只有j-i个元素。如果i位置的索引被省略的话将使用0代替，如果j位置的索引被省略的话将使用len(s)代替。
*/

/*
因为slice值包含指向第一个slice元素的指针，因此向函数传递slice将允许在函数内部修改底层数组的元素。换句话说，复制一个slice只是对底层的数组创建了一个新的slice别名
*/
func main() {
	//数组的第一个元素从索引0开始，但是月份一般是从1开始的，因此我们声明数组时直接跳过第0个元素，第0个元素会被自动初始化为空字符串。
	months := [...]string{1: "1月", 2: "2月", 3: "3月", 4: "4月", 5: "5月", 6: "6月", 7: "7月", 8: "8月", 9: "9月", 10: "10月", 11: "11月", 12: "12月"}
	a := months[3:5]
	b := months[3:5]
	fmt.Println(a, b, months)
	fmt.Printf("%T/n", months)

	cap := cap(months)
	fmt.Println(cap)
}
